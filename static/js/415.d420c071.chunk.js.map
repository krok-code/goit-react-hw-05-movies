{"version":3,"file":"static/js/415.d420c071.chunk.js","mappings":"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","sources":["api/tmdb.js","components/CenteredSpinner.jsx","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/MoviesList.jsx","pages/Home.jsx","utils/constants.js","../node_modules/warning/warning.js"],"sourcesContent":["import axios from 'axios';\nimport {\n  INIT_FETCH_CONFIG,\n  DEFAULT_QUERY_PARAMS_FOR_SEARCH,\n} from 'utils/constants';\n\nconst tmdb = axios.create(INIT_FETCH_CONFIG);\nlet apiConfigDetails = null;\n\nasync function getApiConfigDetails() {\n  const url = '/configuration';\n  try {\n    const response = await tmdb(url);\n    apiConfigDetails = response.data;\n    return response.data;\n  } catch (error) {\n    console.error(`Error in getting of API configuration:${error}`);\n  }\n}\n\ngetApiConfigDetails();\n\nexport function generateImageUrl(path, size) {\n  const baseUrl = apiConfigDetails.images.secure_base_url;\n  const url = baseUrl + size + path;\n  return url;\n}\n\nexport async function getTrending(timeWindow = 'day', language = 'en-US') {\n  const url = `/trending/movie/${timeWindow}`;\n  const params = { language };\n  try {\n    const response = await tmdb(url, { params });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function getMovieBySearch(query, page) {\n  const url = `/search/movie`;\n  const params = { ...DEFAULT_QUERY_PARAMS_FOR_SEARCH, query, page };\n  try {\n    const response = await tmdb(url, { params });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function getMovieDetailsById(movieId, language = 'en-US') {\n  const url = `/movie/${movieId}`;\n  const params = { language };\n  try {\n    const response = await tmdb(url, { params });\n    return response.data;\n  } catch (error) {\n    console.error(`Error loading movie details: ${error.message}`);\n    throw error;\n  }\n}\n\nexport async function getCast(movieId, language = 'en-US') {\n  const url = `/movie/${movieId}/credits`;\n  const params = { language };\n  try {\n    const response = await tmdb(url, { params });\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function getReviews(movieId, page = 1, language = 'en-US') {\n  const url = `/movie/${movieId}/reviews`;\n  const params = { language, page };\n  try {\n    const response = await tmdb(url, { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n","import React from 'react';\nimport { Modal, Spinner } from 'react-bootstrap';\n\nconst CenteredSpinner = () => (\n  <Modal\n    show={true}\n    centered\n    fullscreen\n    contentClassName=\"bg-transparent shadow-none\"\n    backdropClassName=\"bg-dark\"\n  >\n    <Modal.Body\n      className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: '100vh', backdropFilter: 'blur(2px)' }}\n    >\n      <Spinner animation=\"border\" role=\"status\">\n        {/* <span className=\"sr-only\">Loading...</span> */}\n      </Spinner>\n    </Modal.Body>\n  </Modal>\n);\n\nexport default CenteredSpinner;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    navItemProps.onClick(event);\n  });\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  // eslint-disable-next-line no-nested-ternary\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  process.env.NODE_ENV !== \"production\" ? warning(as || !(!action && props.href), '`action=false` and `href` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListGroup } from 'react-bootstrap';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ListGroup as=\"ol\" numbered>\n      {movies.map(({ id, title }) => {\n        return (\n          <ListGroup.Item key={id} as=\"li\">\n            <NavLink to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </NavLink>\n          </ListGroup.Item>\n        );\n      })}\n    </ListGroup>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport { getTrending } from 'api/tmdb';\nimport MoviesList from 'components/MoviesList';\nimport CenteredSpinner from 'components/CenteredSpinner';\nimport { states } from 'utils/constants';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [state, setState] = useState(states.LOADING);\n\n  useEffect(() => {\n    getTrending()\n      .then(data => {\n        setMovies(data);\n        setState(states.LOADED);\n      })\n      .catch(error => {\n        setState(states.ERROR);\n      });\n  }, []);\n\n  switch (state) {\n    case states.LOADING:\n      return <CenteredSpinner />;\n\n    case states.LOADED:\n      return (\n        <>\n          <h1 className=\"mb-3\">Trending today</h1>\n          <MoviesList movies={movies} />\n        </>\n      );\n\n    case states.ERROR:\n      return <p>Oops, something went wrong. Please try again later.</p>;\n\n    default:\n      return null;\n  }\n};\n\nexport default Home;\n","const BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const INIT_FETCH_CONFIG = {\n  method: 'GET',\n  baseURL: BASE_URL,\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MGFhNzY1ZjlhMzVhOTdiNTBiZjI5NmNkZGIzZTBhNyIsInN1YiI6IjY0NTE4NGUwMzNhZDhmMDBmZWYyN2FhNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ryw4dh3H0xPOea1Y2cbKZvI8bFHdhr2M3oPtuPEBQes',\n  },\n};\n\nexport const DEFAULT_QUERY_PARAMS_FOR_SEARCH = {\n  include_adult: false,\n  language: 'en-US',\n  page: 1,\n};\n\nexport const states = {\n  NO_RESULTS: 'NO_RESULTS',\n  LOADING: 'LOADING',\n  LOADED: 'LOADED',\n  ERROR: 'ERROR',\n};\n\nexport const dateFormatOptions = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"names":["tmdb","axios","INIT_FETCH_CONFIG","apiConfigDetails","_getApiConfigDetails","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","data","abrupt","t0","console","error","concat","stop","apply","arguments","generateImageUrl","path","size","images","secure_base_url","getTrending","_getTrending","_callee2","timeWindow","language","url","params","_args2","_context2","length","undefined","results","getMovieBySearch","_x","_x2","_getMovieBySearch","_callee3","query","page","_context3","_objectSpread","DEFAULT_QUERY_PARAMS_FOR_SEARCH","getMovieDetailsById","_x3","_getMovieDetailsById","_callee4","movieId","_args4","_context4","message","getCast","_x4","_getCast","_callee5","_args5","_context5","cast","getReviews","_x5","_getReviews","_callee6","_args6","_context6","getApiConfigDetails","_jsx","Modal","show","centered","fullscreen","contentClassName","backdropClassName","children","className","style","minHeight","backdropFilter","Spinner","animation","role","_excluded","ListGroupItem","React","_ref","ref","bsPrefix","active","disabled","eventKey","variant","action","as","props","_objectWithoutProperties","useBootstrapPrefix","_useNavItem","useNavItem","key","makeEventKey","href","_useNavItem2","_slicedToArray","navItemProps","meta","handleClick","useEventCallback","event","preventDefault","stopPropagation","onClick","tabIndex","Component","classNames","isActive","displayName","ListGroup","horizontalVariant","_useUncontrolled","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","_useUncontrolled$as","controlledProps","BaseNav","Object","assign","Item","movies","location","useLocation","map","_ref2","id","title","NavLink","to","state","from","_useState","useState","_useState2","setMovies","_useState3","states","_useState4","setState","useEffect","then","catch","CenteredSpinner","_jsxs","_Fragment","MoviesList","method","baseURL","headers","accept","Authorization","include_adult","NO_RESULTS","LOADING","LOADED","ERROR","dateFormatOptions","year","month","day","warning","module","exports"],"sourceRoot":""}